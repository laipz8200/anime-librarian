[build-system]
requires = ["setuptools>=75.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "anime-librarian"
version = "0.4.0"
description = "A command-line tool that uses AI to rename and organize video files"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "httpx>=0.28.1",
    "json-repair>=0.44.1",
    "pydantic>=2.11.4",
    "python-dotenv>=1.0.0",
    "rich>=14.1.0",
]

[project.scripts]
anime-librarian = "anime_librarian.main:main"

[tool.ruff]
line-length = 88
target-version = "py313"  # Target Python 3.13
extend-exclude = [".venv", "__pycache__", ".pytest_cache", ".ruff_cache"]

[tool.ruff.lint]
# Rule selections
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear (detects likely bugs and design problems)
    "C4",   # flake8-comprehensions (better list/dict/set comprehensions)
    "UP",   # pyupgrade (upgrade syntax for newer Python)
    "N",    # pep8-naming (PEP8 naming conventions)
    "SIM",  # flake8-simplify (code simplification suggestions)
    "TCH",  # flake8-type-checking (move type annotations to stub files)
    "RUF",  # Ruff-specific rules
    "D",    # pydocstyle (docstring style checking)
    "PT",   # flake8-pytest-style (pytest best practices)
    "TRY",  # flake8-try-except-raise (try/except/raise best practices)
    "ARG",  # flake8-unused-arguments (detect unused arguments)
]

# Ignore specific rules
ignore = [
    "D203",  # one-blank-line-before-class (conflicts with D211)
    "D212",  # multi-line-summary-first-line (conflicts with D213)
    "D107",  # Missing docstring in __init__
]

# Unfixable rules - don't auto-fix these
unfixable = [
    "B",    # Don't auto-fix bugbear rules
]

# Rule configuration
[tool.ruff.lint.pydocstyle]
convention = "google"  # Use Google-style docstrings

# Import sorting configuration
[tool.ruff.lint.isort]
known-first-party = ["anime-librarian"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

# Per-file rule ignores
[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "D",     # No need for docstring rules in tests
    "ARG001", # Unused function arguments are common in tests
    "PT004",  # Use underscore for fixture names that are only used indirectly
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
anime_librarian = ["py.typed"]

[tool.basedpyright]
# Type checking configuration
pythonVersion = "3.13"
pythonPlatform = "All"
typeCheckingMode = "standard"
reportMissingTypeStubs = false

# Ignore libraries without type hints
ignore = [
    "**/node_modules",
    "**/__pycache__",
    "**/.*",
    "build",
    "dist",
]

# Report settings to reduce noise from external libraries
reportUnknownMemberType = "warning"
reportUnknownArgumentType = "warning"
reportUnknownVariableType = "warning"
reportUnknownParameterType = "warning"
reportMissingParameterType = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportImplicitOverride = "warning"

# Strict settings for our own code
reportMissingImports = true
reportUndefinedVariable = true
reportAssertAlwaysTrue = "warning"
reportInvalidStringEscapeSequence = "error"
reportInvalidTypeVarUse = "error"
reportMissingTypeArgument = "warning"
reportUnnecessaryIsInstance = "warning"
reportUnnecessaryCast = "warning"
reportUnnecessaryComparison = "warning"
reportImplicitStringConcatenation = "warning"
reportUnusedCallResult = "warning"
reportUnusedImport = "warning"
reportUnusedClass = "warning"
reportUnusedFunction = "warning"
reportUnusedVariable = "warning"
reportDuplicateImport = "warning"

# Reduce noise from test files - removed due to TOML syntax limitations

[dependency-groups]
dev = [
    "fastapi>=0.116.1",
    "httpx>=0.28.1",
    "pytest-asyncio>=1.1.0",
    "uvicorn>=0.35.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.8",
    "mdformat>=0.7.22",
    "mdformat-gfm>=0.4.1",
    "mdformat-tables>=1.0.0",
    "mdformat-frontmatter>=2.0.8",
    "basedpyright>=1.31.4",
]
